# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PostingPhotoGallery(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, posting_id: int=None, image_path: str=None, active: bool=True):  # noqa: E501
        """PostingPhotoGallery - a model defined in Swagger

        :param id: The id of this PostingPhotoGallery.  # noqa: E501
        :type id: int
        :param posting_id: The posting_id of this PostingPhotoGallery.  # noqa: E501
        :type posting_id: int
        :param image_path: The image_path of this PostingPhotoGallery.  # noqa: E501
        :type image_path: str
        :param active: The active of this PostingPhotoGallery.  # noqa: E501
        :type active: bool
        """
        self.swagger_types = {
            'id': int,
            'posting_id': int,
            'image_path': str,
            'active': bool
        }

        self.attribute_map = {
            'id': 'id',
            'posting_id': 'posting_id',
            'image_path': 'image_path',
            'active': 'active'
        }
        self._id = id
        self._posting_id = posting_id
        self._image_path = image_path
        self._active = active

    @classmethod
    def from_dict(cls, dikt) -> 'PostingPhotoGallery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PostingPhotoGallery of this PostingPhotoGallery.  # noqa: E501
        :rtype: PostingPhotoGallery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this PostingPhotoGallery.


        :return: The id of this PostingPhotoGallery.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this PostingPhotoGallery.


        :param id: The id of this PostingPhotoGallery.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def posting_id(self) -> int:
        """Gets the posting_id of this PostingPhotoGallery.


        :return: The posting_id of this PostingPhotoGallery.
        :rtype: int
        """
        return self._posting_id

    @posting_id.setter
    def posting_id(self, posting_id: int):
        """Sets the posting_id of this PostingPhotoGallery.


        :param posting_id: The posting_id of this PostingPhotoGallery.
        :type posting_id: int
        """
        if posting_id is None:
            raise ValueError("Invalid value for `posting_id`, must not be `None`")  # noqa: E501

        self._posting_id = posting_id

    @property
    def image_path(self) -> str:
        """Gets the image_path of this PostingPhotoGallery.


        :return: The image_path of this PostingPhotoGallery.
        :rtype: str
        """
        return self._image_path

    @image_path.setter
    def image_path(self, image_path: str):
        """Sets the image_path of this PostingPhotoGallery.


        :param image_path: The image_path of this PostingPhotoGallery.
        :type image_path: str
        """
        if image_path is None:
            raise ValueError("Invalid value for `image_path`, must not be `None`")  # noqa: E501

        self._image_path = image_path

    @property
    def active(self) -> bool:
        """Gets the active of this PostingPhotoGallery.


        :return: The active of this PostingPhotoGallery.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active: bool):
        """Sets the active of this PostingPhotoGallery.


        :param active: The active of this PostingPhotoGallery.
        :type active: bool
        """

        self._active = active
